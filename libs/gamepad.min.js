/*!
 * gamepad.js v0.0.4-alpha 2014-06-14T15:01:49
 * https://github.com/neogeek/gamepad.js
 * 
 * Copyright (c) 2014 Scott Doxey
 * Released under the MIT license.
 */
!function(){"use strict";function a(a){return"[object Array]"===Object.prototype.toString.call(a)?!0:!1}function b(b,c){var d;return Object.keys(c).forEach(function(e){c[e]===b?d=e:a(c[e])&&-1!==c[e].indexOf(b)&&(d=e)}),d}function c(){this._events={gamepad:[],keyboard:{}},this._handlers={gamepad:{connect:null,disconnect:null}},this._keyMapping={gamepad:{button_1:0,button_2:1,button_3:2,button_4:3,shoulder_top_left:4,shoulder_top_right:5,shoulder_bottom_left:6,shoulder_bottom_right:7,select:8,start:9,stick_button_left:10,stick_button_right:11,d_pad_up:12,d_pad_down:13,d_pad_left:14,d_pad_right:15,vendor:16},keyboard:{button_1:32,start:27,d_pad_up:[38,87],d_pad_down:[40,83],d_pad_left:[37,65],d_pad_right:[39,68]}},this._listeners=[],this._requestAnimation=d(this._loop.bind(this)),document.addEventListener("keydown",this._handleKeyboardEventListener.bind(this)),document.addEventListener("keyup",this._handleKeyboardEventListener.bind(this))}var d,e;["webkit","moz"].forEach(function(a){d=d||window.requestAnimationFrame||window[a+"RequestAnimationFrame"]||null,e=e||window.cancelAnimationFrame||window[a+"CancelAnimationFrame"]||null}),c.prototype._handleGamepadConnected=function(a){this._handlers.gamepad.connect&&this._handlers.gamepad.connect({index:a})},c.prototype._handleGamepadDisconnected=function(a){this._handlers.gamepad.disconnect&&this._handlers.gamepad.disconnect({index:a})},c.prototype._handleGamepadEventListener=function(a){var c=this;a&&a.connected&&a.buttons.forEach(function(d,e){var f=b(e,c._keyMapping.gamepad);f&&(d.pressed?(c._events.gamepad[a.index][f]||(c._events.gamepad[a.index][f]={pressed:!0,hold:!1,released:!1,player:a.index}),c._events.gamepad[a.index][f].value=d.value):!d.pressed&&c._events.gamepad[a.index][f]&&(c._events.gamepad[a.index][f].released=!0,c._events.gamepad[a.index][f].hold=!1))})},c.prototype._handleKeyboardEventListener=function(a){var c=b(a.keyCode,this._keyMapping.keyboard);c&&("keydown"!==a.type||this._events.keyboard[c]?"keyup"===a.type&&this._events.keyboard[c]&&(this._events.keyboard[c].released=!0,this._events.keyboard[c].hold=!1):this._events.keyboard[c]={pressed:!0,hold:!1,released:!1})},c.prototype._handleEvent=function(a,b,c){b[a].pressed?(this.trigger("press",a,b[a].value,c),b[a].pressed=!1,b[a].hold=!0):b[a].hold?this.trigger("hold",a,b[a].value,c):b[a].released&&(this.trigger("release",a,b[a].value,c),delete b[a])},c.prototype._loop=function(){var a,b=this,c=window.navigator.getGamepads(),e=4;for(a=0;e>a;a+=1)c[a]?(b._events.gamepad[a]||(b._handleGamepadConnected(a),b._events.gamepad[a]={}),b._handleGamepadEventListener(c[a])):b._events.gamepad[a]&&(b._handleGamepadDisconnected(a),b._events.gamepad[a]=null);Object.keys(b._events.keyboard).forEach(function(a){b._handleEvent(a,b._events.keyboard,"keyboard")}),b._events.gamepad.forEach(function(a,c){a&&Object.keys(a).forEach(function(d){b._handleEvent(d,a,c)})}),b._requestAnimation=d(b._loop.bind(b))},c.prototype.on=function(a,b,c,d){-1!==Object.keys(this._handlers.gamepad).indexOf(a)&&"function"==typeof b?(this._handlers.gamepad[a]=b,this._events.gamepad=[]):this._listeners.push({type:a,button:b,callback:c,options:d})},c.prototype.setCustomMapping=function(a,b){if(void 0===this._keyMapping[a])throw new Error('The device "'+a+'" is not supported through gamepad.js');this._keyMapping[a]=b},c.prototype.trigger=function(a,b,c,d){this._listeners.forEach(function(e){e.type===a&&e.button===b&&e.callback({type:e.type,button:e.button,value:c,player:d,event:e})})},"function"==typeof define&&void 0!==define.amd?define([],function(){return c}):"object"==typeof module&&void 0!==module.exports?module.exports=c:window.Gamepad=c}();